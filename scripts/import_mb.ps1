# Script d'import MusicBrainz pour Windows PowerShell
# Usage: .\scripts\import_mb.ps1

param(
    [string]$DB_HOST = "127.0.0.1",
    [int]$DB_PORT = 5432,
    [string]$DB_NAME = "musicbrainz",
    [string]$DB_USER = "musicbrainz",
    [string]$DUMPS_DIR = ".\dumps"
)

Write-Host "üöÄ D√©but de l'import MusicBrainz..." -ForegroundColor Green

# V√©rifier que PostgreSQL est accessible
Write-Host "üì° V√©rification de la connexion PostgreSQL..." -ForegroundColor Yellow
try {
    $env:PGPASSWORD = "musicbrainz"
    $result = psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d postgres -c "SELECT 1;" 2>$null
    if ($LASTEXITCODE -ne 0) {
        throw "Connexion √©chou√©e"
    }
} catch {
    Write-Host "‚ùå PostgreSQL n'est pas accessible. V√©rifiez que Docker est d√©marr√©." -ForegroundColor Red
    exit 1
}

# V√©rifier la pr√©sence des dumps
Write-Host "üìÅ V√©rification des fichiers dump..." -ForegroundColor Yellow
if (-not (Test-Path $DUMPS_DIR)) {
    Write-Host "‚ùå R√©pertoire $DUMPS_DIR introuvable" -ForegroundColor Red
    exit 1
}

# Trouver les fichiers dump
$dumpFiles = Get-ChildItem -Path $DUMPS_DIR -Filter "*.dump" -Recurse
if ($dumpFiles.Count -eq 0) {
    Write-Host "‚ùå Aucun fichier .dump trouv√© dans $DUMPS_DIR" -ForegroundColor Red
    Write-Host "üí° T√©l√©chargez le dump depuis https://musicbrainz.org/doc/MusicBrainz_Database/Download" -ForegroundColor Cyan
    exit 1
}

$DUMP_FILE = $dumpFiles[0].FullName
Write-Host "üì¶ Fichier dump trouv√©: $DUMP_FILE" -ForegroundColor Green

# Cr√©er la base de donn√©es si elle n'existe pas
Write-Host "üóÑÔ∏è  Cr√©ation de la base de donn√©es..." -ForegroundColor Yellow
try {
    psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d postgres -c "CREATE DATABASE $DB_NAME;" 2>$null
} catch {
    Write-Host "Base de donn√©es existe d√©j√†" -ForegroundColor Gray
}

# Restaurer le dump
Write-Host "üì• Restauration du dump MusicBrainz (cela peut prendre plusieurs heures)..." -ForegroundColor Yellow
Write-Host "‚è≥ Cette √©tape peut prendre plusieurs heures selon la taille du dump..." -ForegroundColor Cyan

try {
    pg_restore -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -v --no-owner --no-privileges $DUMP_FILE
    if ($LASTEXITCODE -ne 0) {
        throw "Restauration √©chou√©e"
    }
} catch {
    Write-Host "‚ùå Erreur lors de la restauration du dump" -ForegroundColor Red
    exit 1
}

# Cr√©er les extensions n√©cessaires
Write-Host "üîß Installation des extensions PostgreSQL..." -ForegroundColor Yellow
psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -c @"
CREATE EXTENSION IF NOT EXISTS cube;
CREATE EXTENSION IF NOT EXISTS earthdistance;
"@

# Analyser les statistiques
Write-Host "üìä Mise √† jour des statistiques..." -ForegroundColor Yellow
psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -c "ANALYZE;"

Write-Host "‚úÖ Import MusicBrainz termin√© avec succ√®s!" -ForegroundColor Green
Write-Host "üîç Vous pouvez maintenant cr√©er les vues KPI avec: .\scripts\apply_views.ps1" -ForegroundColor Cyan
